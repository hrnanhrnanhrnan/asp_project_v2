@model candyshop_project.ViewModels.StatisticalDataViewModel;

<!DOCTYPE HTML>
<html>
<head>
</head>
<body>

    <h1>
        Market insight
        <small class="text-muted">| A statistical summary</small>
    </h1>
    <hr />

    @{ if (Model.Symbols != null)
        {
            <h4>Choose currency: </h4>
            <select id="selectCurrency">
                @foreach (var item in Model.Symbols)
                {
                    <option>@item</option>
                }
            </select>
        }
    }

    <div class="container_sale">
        <div class="fixed">
            <h3>Highest state revenue</h3>
            <div>
                <span>@Model.stateData.State</span>
                <span style="padding-left:3%" class="values">@Model.stateData.Amount</span>
            </div>

        </div>
        <div class="flex-item">
            <h3>Top 3 loyal customers</h3>
            <div>
                @foreach (var customer in Model.LoyalCustomerData)
                {
                    <span>@customer.Name</span>
                    <span style="padding-left:3%" class="values">@customer.Amount</span>
                    <br />
                }
            </div>

        </div>

    </div>

    <h2>Sale analysis</h2>
    <div id="chartContainerColumn" style="height: 370px; width: 100%;margin-top:6%"></div>
    <div id="chartContainerLine" style="height: 370px; width: 100%;margin-top:10%"></div>

    <h3>Popular products in last month</h3>
    <div>

        <table class="table table-striped" >
            <thead>
                <tr>
                    <th>Candy</th>
                    <th>Price</th>
                    <th>Amount</th>
                </tr>
            </thead>
            <tbody id="popularProducts">
                @foreach (var item in Model.PopularProducts)
                {
                    <tr>
                        <td> @item.Name </td>
                        <td class="values"> @item.Price </td>
                        <td> @item.Amount</td>
                    </tr>
                }
            </tbody>

        </table>
    </div>

    <h2>Product inventory</h2>
    <div>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Candy</th>
                    <th>Price</th>
                    <th>Amount left in stock</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.InventoryData)
                {
                    <tr>
                        <td> @item.Name </td>
                        <td class="values"> @item.Price </td>
                        <td> @item.Amount</td>
                    </tr>
                }
            </tbody>

        </table>
    </div>
</body>
</html>

<script src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script type="text/javascript">

    window.addEventListener('DOMContentLoaded', (event) => {
    $("#image").hide();
    var amountPerDayChartData= @Html.Raw(ViewBag.DataPointsAmountPerDay);
    var revenueData= @Html.Raw(ViewBag.DataPointsRevenue);
    
    SaleAmountPerDay(amountPerDayChartData);


    /*---CHANGNING CURRENCIES OF PAGE---*/
    const select = document.getElementById("selectCurrency");

    let values = [];
    let originalValues = [];
    values = $(".values").toArray();


    values.map(value => {
        originalValues.push(parseFloat(value.innerHTML.replace(",", ".")))
    });

    function GetRate(symbol){
         $.ajax({
            url: "/Admin/GetTotalInCurrency",
            type: "get",
                    data: {
                        "currency": symbol, "orderDate": "@DateTime.Now"
            },
            success: function (data) {
                getTotalInCurrency(symbol,data);
                SaleRevenuePerDay(revenueData,data);
            }
        });
    }















    function getTotalInCurrency(symbol,data){

        for (var i = 0; i < values.length; i++) {
            const number = originalValues[i] * parseFloat(data.replace(",", "."))
            values[i].innerHTML = `${number.toFixed(2)} ${symbol}`
        }

    };

    select.value = "SEK";
    GetRate(select.value);
    
    select.addEventListener("change", (e) => {
        GetRate(e.target.value)
    });


});

</script>

